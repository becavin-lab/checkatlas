name: Continuous Integration
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - 'test*' # Push events to matching v*, i.e. v1.0, v20.15.10
  #branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linter:
    strategy:
      fail-fast: false
      matrix:
python-version: ['3.12']
poetry-version: ['1.7.1']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
python-version: ['3.12']
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.6
        with:
poetry-version: ['1.7.1']
      - name: Test token
        run: echo ${{ secrets.PYPI_API_TOKEN }}
      - name: Install project
        run: poetry install --with dev
      - name: Run linter
        run: make lint

  tests_linux:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
python-version: ['3.12']
poetry-version: ['1.7.1']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
python-version: ['3.12']
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.6
        with:
poetry-version: ['1.7.1']
      - name: Install project
        run: poetry install --with dev
      - name: Run tests
        run: make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        # with:
        #   fail_ci_if_error: true

  tests_mac:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
python-version: ['3.12']
poetry-version: ['1.7.1']
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
python-version: ['3.12']
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.6
        with:
poetry-version: ['1.7.1']
      - name: Install project
        run: poetry install --with dev
      - name: Run tests
        run: make test

tests_windows:
  needs: linter
  strategy:
    fail-fast: false
    matrix:
      python-version: [ "3.12" ]
      poetry-version: [ "1.7.1" ]
      os: [windows-latest]
  runs-on: ${{ matrix.os }}
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Python Poetry Action
      uses: abatilo/actions-poetry@v2.1.6
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-
    - name: Install project
      run: poetry install --with dev
    - name: Run tests
      run: make test
